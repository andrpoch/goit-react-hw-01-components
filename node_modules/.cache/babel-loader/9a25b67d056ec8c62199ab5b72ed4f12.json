{"ast":null,"code":"var _jsxFileName = \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-01-components/src/components/FriendList/FriendList.js\";\nimport React from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport styles from './FriendList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.friend_list,\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: styles.item,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: friend.isOnline ? styles.isOnline : styles.isOffline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.avatar,\n        src: friend.avatar,\n        alt: \"User avatar\",\n        width: \"48\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.name,\n        children: friend.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 10\n      }, this)]\n    }, friend.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 4\n  }, this);\n};\n\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  })\n};\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-01-components/src/components/FriendList/FriendList.js"],"names":["React","PropTypes","string","styles","FriendList","friends","friend_list","map","friend","item","isOnline","isOffline","avatar","name","id","propTypes","shape","number","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,MAApB,QAAkC,YAAlC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAChB;AAAI,IAAA,SAAS,EAAEF,MAAM,CAACG,WAAtB;AAAA,cACID,OAAO,CAACE,GAAR,CAAYC,MAAM,iBAAK;AAAI,MAAA,SAAS,EAAEL,MAAM,CAACM,IAAtB;AAAA,8BACrB;AAAM,QAAA,SAAS,EAAED,MAAM,CAACE,QAAP,GAAkBP,MAAM,CAACO,QAAzB,GAAoCP,MAAM,CAACQ;AAA5D;AAAA;AAAA;AAAA;AAAA,cADqB,eAErB;AAAK,QAAA,SAAS,EAAER,MAAM,CAACS,MAAvB;AAA+B,QAAA,GAAG,EAAEJ,MAAM,CAACI,MAA3C;AAAmD,QAAA,GAAG,EAAC,aAAvD;AAAqE,QAAA,KAAK,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cAFqB,eAGrB;AAAG,QAAA,SAAS,EAAET,MAAM,CAACU,IAArB;AAAA,kBAA4BL,MAAM,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,cAHqB;AAAA,OAAiCL,MAAM,CAACM,EAAxC;AAAA;AAAA;AAAA;AAAA,YAAvB;AADJ;AAAA;AAAA;AAAA;AAAA,UADgB;AAAA,CAAnB;;KAAMV,U;AASNA,UAAU,CAACW,SAAX,GAAuB;AACpBV,EAAAA,OAAO,EAAEJ,SAAS,CAACe,KAAV,CAAgB;AACtBF,IAAAA,EAAE,EAAEb,SAAS,CAACgB,MAAV,CAAiBC,UADC;AAEtBN,IAAAA,MAAM,EAAEX,SAAS,CAACC,MAAV,CAAiBgB,UAFH;AAGtBL,IAAAA,IAAI,EAAEZ,SAAS,CAACC,MAAV,CAAiBgB,UAHD;AAItBR,IAAAA,QAAQ,EAAET,SAAS,CAACkB,IAAV,CAAeD;AAJH,GAAhB;AADW,CAAvB;AASA,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n   <ul className={styles.friend_list}>\n      {friends.map(friend => (<li className={styles.item} key={friend.id}>\n         <span className={friend.isOnline ? styles.isOnline : styles.isOffline}></span>\n         <img className={styles.avatar} src={friend.avatar} alt=\"User avatar\" width=\"48\" />\n         <p className={styles.name}>{friend.name}</p>\n      </li>))}\n   </ul>)\n\nFriendList.propTypes = {\n   friends: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n   })\n};\n\nexport default FriendList;\n"]},"metadata":{},"sourceType":"module"}